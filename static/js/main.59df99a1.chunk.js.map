{"version":3,"sources":["store/index.ts","components/Container/styled.ts","components/Container/index.tsx","containers/DetailPage/styled.ts","store/constants.ts","store/sagaInjectors.ts","utils/injectSaga.tsx","containers/DetailPage/axios.ts","containers/DetailPage/service.ts","containers/DetailPage/constant.ts","containers/DetailPage/saga.ts","containers/DetailPage/reducer.ts","store/reducerInjectors.ts","utils/injectReducer.tsx","containers/DetailPage/useDispatch.ts","containers/DetailPage/index.tsx","containers/DetailPage/useSelector.ts","utils/axios.ts","containers/HomePage/service.ts","containers/HomePage/constant.ts","containers/HomePage/saga.ts","containers/HomePage/reducer.ts","containers/HomePage/useDispatch.ts","containers/HomePage/styled.ts","containers/HomePage/Corousel/styled.ts","containers/HomePage/Corousel/index.tsx","containers/HomePage/index.tsx","containers/HomePage/useSelector.ts","Routes.tsx","App.tsx","index.tsx","@history.ts","store/reducer.ts"],"names":["createReduxStore","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","history","enhancers","applyMiddleware","store","createStore","createReducer","runSaga","saga","args","run","injectedReducers","injectedSagas","anyModule","module","hot","accept","replaceReducer","Cart","styled","div","Breadcrumbs","Breadcrumb","StyledLayoutHeader","Layout","Header","StyledLayoutContent","Typography","Title","Content","Search","Input","Wrapper","WrapperSearch","Container","children","crumbs","onSearch","valueSearch","onChange","alt","src","value","autoComplete","placeholder","ShoppingCartOutlined","style","fontSize","color","paddingLeft","map","index","to","label","Item","Image","img","DetailContainer","StyledContainerIcon","Paragraph","DAEMON","ONCE_TILL_UNMOUNT","injectSagaFactory","s","key","descriptor","newDescriptor","mode","anyStore","hasSaga","Reflect","has","task","ejectSagaFactory","cancel","getInjector","injectSaga","ejectSaga","useInjectSaga","context","React","useContext","ReactReduxContext","useEffect","injectors","getInjectors","internal","axios","create","baseURL","withCredentials","headers","Authorization","interceptors","request","use","config","load","params","get","i","START_ACTION","SUCCESS_ACTION","ERROR_ACTION","RESET_ACTION","loadSaga","payload","call","data","put","type","error","Error","Response","takeLatest","defaultState","loading","undefined","reducer","state","action","console","log","injectReducerFactory","injectReducer","useInjectReducer","useDispatch","dispatch","useReduxDispatch","useMemo","reset","DetailPage","useReduxSelector","detailPage","id","useParams","useState","modal","setModal","useHistory","name","notification","message","onClose","v","push","spinning","gutter","sm","md","cursor","borderRadius","marginTop","onClick","width","column","xs","lg","bordered","title","layout","DollarCircleOutlined","className","Text","sell_price","FundProjectionScreenOutlined","stock_on_hand","PieChartOutlined","min_qty_order","weight","FileDoneOutlined","description","icon","ShareAltOutlined","size","visible","onCancel","onOk","footer","closable","mapPayload","limit","search","new","rows","BannerContainers","a","StyledLayoutContents","StyledCard","Card","Cards","StyledAntdCarousel","Carousel","Corousel","setting","dots","arrows","autoplay","draggable","slidesToScroll","infinite","HomePage","homePage","useLocation","defaultSearch","setDefaultSearch","setValue","Meta","length","qs","parse","e","target","justify","permalink","hoverable","cover","Routes","path","exact","component","App","fallback","ReactDOM","render","StrictMode","document","getElementById","createBrowserHistory","combineReducers","router","connectRouter"],"mappings":"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","file":"static/js/main.59df99a1.chunk.js","sourcesContent":["import {\n  createStore,\n  compose,\n  applyMiddleware,\n  Store as ReduxStore,\n} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware } from 'connected-react-router'\nimport createReducer from './reducer'\nimport history from '@history'\nimport type { Store, RootReducer, RootState } from './types'\n\nexport type { RootReducer, RootState }\n\ninterface ReduxWindow {\n  readonly __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: (\n    o: Record<string, unknown>\n  ) => typeof compose\n}\n\ninterface HotModule {\n  readonly hot?: {\n    readonly accept: (path: string, f: () => void) => void\n  }\n}\n\nconst createReduxStore = (): ReduxStore => {\n  let composeEnhancers = compose\n  const reduxSagaMonitorOptions = {}\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    const anyWindow = window as unknown as ReduxWindow\n    if (anyWindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n      composeEnhancers = anyWindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n\n    // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n    /* eslint-enable */\n  }\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions)\n\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware, routerMiddleware(history)]\n  const enhancers = [applyMiddleware(...middlewares)]\n\n  const store = createStore(\n    createReducer({}),\n    composeEnhancers(...enhancers)\n  ) as Store\n  store.runSaga = (saga, args) => sagaMiddleware.run(saga, args)\n  store.injectedReducers = {}\n  store.injectedSagas = {}\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  const anyModule = module as unknown as HotModule\n  /* istanbul ignore next */\n  if (anyModule.hot) {\n    anyModule.hot.accept('./reducer', () => {\n      store.replaceReducer(createReducer(store.injectedReducers))\n    })\n  }\n\n  return store\n}\n\nexport default createReduxStore\n","import { Layout, Typography, Input, Breadcrumb } from 'antd'\nimport styled from 'styled-components'\n\nexport const Cart = styled.div`\n  display: flex;\n`\nexport const Breadcrumbs = styled(Breadcrumb)`\n  margin: 16px 20px;\n`\nexport const StyledLayoutHeaders = styled(Layout.Header)`\n  position: fixed;\n  z-index: 3000;\n  width: 100%;\n  background: yellow;\n  height: auto;\n  padding: 0 0;\n  box-shadow: 0px 1px 3px #0000001a;\n  padding: 0;\n\n  @media only screen and (min-width: 992px) {\n    flex-direction: row;\n    padding: 10px 50px !important;\n  }\n`\nexport const StyledLayoutHeader = styled(Layout.Header)`\n  position: fixed;\n  z-index: 1000;\n  width: 100%;\n  background: #101820;\n  height: auto;\n  padding: 0 0;\n  box-shadow: 0px 1px 3px #0000001a;\n  padding: 0;\n\n  @media only screen and (min-width: 992px) {\n    flex-direction: row;\n    padding: 10px 50px !important;\n  }\n`\n\nexport const StyledTitle = styled(Typography.Title)`\n  font-size: 20px !important;\n  color: #fff !important;\n  width: 200px;\n  text-align: center;\n\n  @media only screen and (min-width: 992px) {\n    margin-bottom: 0 !important;\n    text-align: left;\n  }\n`\n\nexport const StyledLayoutContent = styled(Layout.Content)`\n  min-height: 100vh;\n  padding: 10px 10px !important;\n  background: #ffffff;\n\n  @media only screen and (min-width: 992px) {\n    flex-direction: row;\n    padding: 90px 60px !important;\n  }\n`\nexport const Search = styled(Input.Search)`\n  border-radius: 8px;\n  width: 230px;\n`\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  display: flex;\n  padding-top: 15px;\n`\n\nexport const WrapperSearch = styled.div`\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  position: relative;\n  @media only screen and (min-width: 992px) {\n    margin-left: 30px;\n  }\n  .anticon {\n    font-size: 15px;\n    color: black;\n  }\n\n  .ant-input {\n    height: 40px;\n    border-radius: 5px;\n    text-align: left;\n    letter-spacing: 0.28px;\n    background: #ffffff 0% 0% no-repeat padding-box;\n  }\n  .ant-btn {\n    border-top-right-radius: 5px !important;\n    border-bottom-right-radius: 5px !important;\n    height: 40px !important;\n    padding: 1px !important;\n    background-color: grey;\n  }\n  @media only screen and (min-width: 992px) {\n    margin-top: 0;\n  }\n`\n","import { Breadcrumb, Layout } from 'antd'\nimport { ChangeEvent, FC, ReactNode } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  StyledLayoutContent,\n  StyledLayoutHeader,\n  WrapperSearch,\n  Search,\n  Cart,\n  Wrapper,\n  Breadcrumbs,\n} from './styled'\nimport { ShoppingCartOutlined } from '@ant-design/icons'\n\nexport interface Crumb {\n  readonly to?: string\n  readonly label: string\n}\n\nexport interface Props {\n  readonly children: ReactNode\n  readonly crumbs: ReadonlyArray<Crumb>\n  readonly onSearch?: (value: string) => void\n  readonly valueSearch?: string\n  readonly onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst Container: FC<Props> = ({\n  children,\n  crumbs,\n  onSearch,\n  valueSearch,\n  onChange,\n}: Props) => {\n  return (\n    <Layout>\n      <StyledLayoutHeader>\n        <Cart>\n          <img\n            alt={`img`}\n            src=\"https://www.aspenku.com/static/media/logo.29483d78.svg\"\n          />\n          <Wrapper>\n            <WrapperSearch>\n              <Search\n                value={valueSearch}\n                onSearch={onSearch}\n                autoComplete=\"search\"\n                onChange={onChange}\n                placeholder=\"Search\"\n              />\n            </WrapperSearch>\n            <ShoppingCartOutlined\n              style={{\n                fontSize: 30,\n                color: 'white',\n                paddingLeft: 40,\n              }}\n            />\n          </Wrapper>\n        </Cart>\n      </StyledLayoutHeader>\n      <StyledLayoutContent>\n        <Breadcrumbs>\n          {crumbs.map(({ to, label }, index) => (\n            <Breadcrumb.Item key={index}>\n              {to ? <Link to={to}>{label}</Link> : label}\n            </Breadcrumb.Item>\n          ))}\n        </Breadcrumbs>\n\n        {children}\n      </StyledLayoutContent>\n    </Layout>\n  )\n}\n\nexport default Container\n","import styled from 'styled-components'\nimport { Typography } from 'antd'\n\nexport const Image = styled.img`\n  overflow: hidden; /* [1.2] Hide the overflowing of child elements */\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    transition: transform 0.5s ease;\n  }\n`\n\nexport const DetailContainer = styled.div`\n  background-color: #fff;\n  padding: 10px;\n`\nexport const StyledParagraph = styled(Typography.Paragraph)`\n  font-size: 14px;\n  line-height: 22px;\n  color: #707070;\n  margin: 0;\n  white-space: pre-wrap;\n  @media only screen and (min-width: 992px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`\nexport const StyledContainerIcon = styled.div`\n  margin: 11.5px 0;\n  display: flex;\n\n  .icon {\n    margin-right: 13px;\n    margin-top: 3px;\n    font-size: 15px;\n    width: 15px;\n    height: 15px;\n    @media only screen and (min-width: 992px) {\n      font-size: 18px;\n      margin-right: 16px;\n      width: 18px;\n      height: 18px;\n    }\n  }\n\n  .text {\n    font-size: 14px;\n    color: #707070;\n    white-space: pre-wrap;\n    @media only screen and (min-width: 992px) {\n      font-size: 16px;\n    }\n  }\n`\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount'\nexport const DAEMON = '@@saga-injector/daemon'\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount'\n","import type { Store as ReduxStore } from 'redux'\nimport type { Store, SagaDescriptor } from './types'\nimport { DAEMON, ONCE_TILL_UNMOUNT } from './constants'\n\nexport type Descriptor = Omit<SagaDescriptor, 'task'>\n\ninterface InjectSaga {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (key: string, descriptor: Descriptor, args?: any): void\n}\n\nexport const injectSagaFactory = (s: ReduxStore): InjectSaga => {\n  const store = s as Store\n  return (key, descriptor = {}, args?) => {\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    }\n    const { saga, mode } = newDescriptor\n    const anyStore = store\n\n    let hasSaga = Reflect.has(anyStore.injectedSagas, key)\n\n    if (process.env.NODE_ENV !== 'production') {\n      const oldDescriptor = anyStore.injectedSagas[key]\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel()\n        hasSaga = false\n      }\n    }\n\n    if (\n      saga &&\n      (!hasSaga || (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT))\n    ) {\n      /* eslint-disable no-param-reassign */\n      anyStore.injectedSagas[key] = {\n        ...newDescriptor,\n        task: anyStore.runSaga(saga, args),\n      }\n      /* eslint-enable no-param-reassign */\n    }\n  }\n}\n\ninterface EjectSaga {\n  (key: string): void\n}\n\nexport const ejectSagaFactory = (store: ReduxStore): EjectSaga => {\n  return (key: string) => {\n    const anyStore = store as Store\n\n    if (Reflect.has(anyStore.injectedSagas, key)) {\n      const descriptor = anyStore.injectedSagas[key]\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel()\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n          ;(anyStore as any).injectedSagas[key] = 'done'\n        }\n      }\n    }\n  }\n}\n\ninterface SagaInjector {\n  readonly injectSaga: InjectSaga\n  readonly ejectSaga: EjectSaga\n}\n\nexport const getInjector = (store: ReduxStore): SagaInjector => {\n  return {\n    injectSaga: injectSagaFactory(store),\n    ejectSaga: ejectSagaFactory(store),\n  }\n}\n\nexport default getInjector\n","import React from 'react'\nimport { ReactReduxContext } from 'react-redux'\n\nimport getInjectors, { Descriptor } from 'store/sagaInjectors'\n\ninterface Params extends Descriptor {\n  readonly key: string\n}\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nconst useInjectSaga = ({ key, saga, mode }: Params): void => {\n  const context = React.useContext(ReactReduxContext)\n  React.useEffect(() => {\n    const injectors = getInjectors(context.store)\n    injectors.injectSaga(key, { saga, mode })\n    return () => {\n      injectors.ejectSaga(key)\n    }\n  }, [context.store, key, saga, mode])\n}\n\nexport { useInjectSaga }\n","import axios from 'axios'\n\nconst internal = axios.create({\n  baseURL: 'https://apis-dev.aspenku.com/api/v3/product',\n  withCredentials: false,\n  headers: {\n    Authorization: 'Basic QXNwZW5rdTpBc3Blbmt1',\n  },\n})\n\ninternal.interceptors.request.use((config) => {\n  return config\n})\n\nexport default internal\n","import type { AxiosResponse } from 'axios'\nimport axios from './axios'\nimport type { Product, StartActionPayload, Error } from './types'\n\nexport type Response = AxiosResponse<Product | Error>\n\nexport type Payload = StartActionPayload\n\nexport const load = (params: Payload): Promise<Response> => {\n  return axios.get(`/${params.i}`)\n}\n","export const START_ACTION = 'Detail/START_ACTION'\nexport const SUCCESS_ACTION = 'Detail/SUCCESS_ACTION'\nexport const ERROR_ACTION = 'Detail/ERROR_ACTION'\nexport const RESET_ACTION = 'Detail/RESET_ACTION'\n","import type { SagaIterator } from 'redux-saga'\nimport { load, Response } from './service'\nimport type { Product, ErrorAction, StartAction, SuccessAction } from './types'\nimport { put, call, takeLatest } from 'redux-saga/effects'\nimport { ERROR_ACTION, START_ACTION, SUCCESS_ACTION } from './constant'\n\nexport function* loadSaga({ payload }: StartAction): SagaIterator {\n  const { data }: Response = yield call(load, payload)\n  if (data) {\n    yield put<SuccessAction>({\n      payload: { data: data as Product },\n      type: SUCCESS_ACTION,\n    })\n  } else {\n    yield put<ErrorAction>({\n      payload: { error: { Error: 'Something Wrong', Response: 'False' } },\n      type: ERROR_ACTION,\n    })\n  }\n}\n\nexport default function* saga(): SagaIterator {\n  yield takeLatest(START_ACTION, loadSaga)\n}\n","import {\n  ERROR_ACTION,\n  RESET_ACTION,\n  START_ACTION,\n  SUCCESS_ACTION,\n} from './constant'\nimport type { DetailPageReducer, DetailPageState } from './types'\n\nexport const defaultState: DetailPageState = {\n  loading: false,\n  error: undefined,\n  data: undefined,\n  i: '',\n}\n\nexport const reducer: DetailPageReducer = (\n  state = defaultState,\n  action\n): DetailPageState => {\n  switch (action.type) {\n    case START_ACTION:\n      return {\n        ...state,\n        ...action.payload,\n        loading: true,\n      }\n    case SUCCESS_ACTION:\n      // eslint-disable-next-line no-console\n      console.log(action.payload.data)\n      return {\n        ...state,\n        loading: false,\n        ...action.payload.data,\n      }\n    case ERROR_ACTION:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      }\n    case RESET_ACTION:\n      return {\n        ...state,\n        error: undefined,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import type { Reducer, Store as ReduxStore } from 'redux'\nimport createReducer from './reducer'\nimport type { Store } from './types'\n\ninterface InjectReducer {\n  (key: string, reducer: Reducer): void\n}\n\nexport const injectReducerFactory = (s: ReduxStore): InjectReducer => {\n  const store = s as Store\n  return (key: string, reducer: Reducer): void => {\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key) &&\n      store.injectedReducers[key] === reducer\n    ) {\n      return\n    }\n\n    store.injectedReducers[key] = reducer\n    store.replaceReducer(createReducer(store.injectedReducers))\n  }\n}\n\ninterface ReducerInjector {\n  readonly injectReducer: InjectReducer\n}\n\nconst getInjector = (store: ReduxStore): ReducerInjector => {\n  return { injectReducer: injectReducerFactory(store) }\n}\n\nexport default getInjector\n","import React from 'react'\nimport { Reducer, Action, AnyAction } from 'redux'\nimport { ReactReduxContext } from 'react-redux'\n\nimport getInjectors from 'store/reducerInjectors'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface Params<S = any, A extends Action = AnyAction> {\n  readonly key: string\n  readonly reducer: Reducer<S, A>\n}\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst useInjectReducer = <S extends any = any, A extends Action = AnyAction>({\n  key,\n  reducer,\n}: Params<S, A>): void => {\n  const context = React.useContext(ReactReduxContext)\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer as Reducer)\n  }, [context.store, key, reducer])\n}\n\nexport { useInjectReducer }\n","import { useMemo } from 'react'\nimport type { ResetAction, StartAction } from './types'\nimport { useDispatch as useReduxDispatch } from 'react-redux'\nimport { RESET_ACTION, START_ACTION } from './constant'\n\nexport interface Dispatch {\n  readonly load: (i: string) => void\n  readonly reset: () => void\n}\n\nexport const useDispatch = (): Dispatch => {\n  const dispatch = useReduxDispatch()\n  return useMemo(\n    () => ({\n      load: (i) => {\n        dispatch<StartAction>({\n          payload: { i },\n          type: START_ACTION,\n        })\n      },\n      reset: () => {\n        dispatch<ResetAction>({\n          type: RESET_ACTION,\n        })\n      },\n    }),\n    [dispatch]\n  )\n}\n\nexport default useDispatch\n","import {\n  Col,\n  Typography,\n  Modal,\n  notification,\n  Row,\n  Spin,\n  Descriptions,\n  Button,\n} from 'antd'\nimport Container, { Crumb } from 'components/Container'\nimport { FC, useEffect, useMemo, useState } from 'react'\nimport { useHistory, useParams } from 'react-router'\nimport { DetailContainer, StyledContainerIcon, Image } from './styled'\nimport { useInjectSaga } from 'utils/injectSaga'\nimport saga from './saga'\nimport reducer from './reducer'\nimport { useInjectReducer } from 'utils/injectReducer'\nimport useDispatch from './useDispatch'\nimport { useSelector } from './useSelector'\nimport {\n  PieChartOutlined,\n  DollarCircleOutlined,\n  FileDoneOutlined,\n  FundProjectionScreenOutlined,\n  ShareAltOutlined,\n} from '@ant-design/icons'\n\ninterface Params {\n  readonly id: string\n}\n\nconst DetailPage: FC = () => {\n  useInjectReducer({ key: 'detailPage', reducer })\n  useInjectSaga({ key: 'detailPage', saga })\n  const { load, reset } = useDispatch()\n  const { data, error, loading } = useSelector()\n  const { id }: Params = useParams()\n  const [modal, setModal] = useState<boolean>(false)\n  const history = useHistory()\n\n  const crumbs: ReadonlyArray<Crumb> = useMemo(() => {\n    return [\n      { to: '/', label: 'Home' },\n      { to: '/', label: 'List' },\n      { label: data?.name || id },\n    ]\n  }, [data?.name, id])\n\n  useEffect(() => load(id), [load, id])\n\n  useEffect(() => {\n    if (error) {\n      notification.error({ message: error.Error, onClose: reset })\n    }\n  }, [error, reset])\n\n  return (\n    <Container crumbs={crumbs} onSearch={(v) => history.push(`/?search=${v}`)}>\n      <Spin spinning={loading}>\n        <Row gutter={[24, 24]}>\n          <Col sm={24} md={10}>\n            <Image\n              style={{ cursor: 'pointer', borderRadius: 9, marginTop: 30 }}\n              onClick={() => setModal(true)}\n              width=\"80%\"\n              src=\"https://images.tokopedia.net/img/cache/700/VqbcmM/2020/10/21/55893110-8f4d-42cb-97cf-a3e446e5d2c8.jpg\"\n              alt={`'movie'}-img`}\n            />\n          </Col>\n          <Col sm={24} md={14}>\n            <DetailContainer>\n              <Descriptions\n                column={{ xs: 1, sm: 1, md: 1, lg: 2 }}\n                bordered\n                title={data?.name}\n                layout=\"vertical\"\n              >\n                <Descriptions.Item label=\"Harga Produk\">\n                  <StyledContainerIcon>\n                    <DollarCircleOutlined className=\"icon\" />\n                    <Typography.Text className=\"text\">\n                      Rp {data?.sell_price}\n                    </Typography.Text>\n                  </StyledContainerIcon>\n                </Descriptions.Item>\n\n                <Descriptions.Item label=\"Stok Produk\">\n                  <StyledContainerIcon>\n                    <FundProjectionScreenOutlined className=\"icon\" />\n                    <Typography.Text className=\"text\">\n                      {data?.stock_on_hand} Peaces\n                    </Typography.Text>\n                  </StyledContainerIcon>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Minimum Order\">\n                  <StyledContainerIcon>\n                    <PieChartOutlined className=\"icon\" />\n                    <Typography.Text className=\"text\">\n                      {data?.min_qty_order}\n                    </Typography.Text>\n                  </StyledContainerIcon>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Berat\">\n                  <StyledContainerIcon>\n                    <FundProjectionScreenOutlined className=\"icon\" />\n                    <Typography.Text className=\"text\">\n                      {data?.weight}\n                    </Typography.Text>\n                  </StyledContainerIcon>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Deskripsi Produk\">\n                  <StyledContainerIcon>\n                    <FileDoneOutlined className=\"icon\" />\n                    <Typography.Text className=\"text\">\n                      {data?.description}\n                    </Typography.Text>\n                  </StyledContainerIcon>\n                </Descriptions.Item>\n              </Descriptions>\n            </DetailContainer>\n            <DetailContainer>\n              <Button type=\"primary\" icon={<ShareAltOutlined />} size=\"large\">\n                Share Produk\n              </Button>\n            </DetailContainer>\n          </Col>\n        </Row>\n        <Modal\n          visible={modal}\n          onCancel={() => setModal(false)}\n          onOk={() => setModal(false)}\n          footer={false}\n          closable={false}\n          title={false}\n        >\n          <img\n            width=\"100%\"\n            src=\"https://images.tokopedia.net/img/cache/700/VqbcmM/2020/10/21/55893110-8f4d-42cb-97cf-a3e446e5d2c8.jpg\"\n            alt={`img`}\n          />\n        </Modal>\n      </Spin>\n    </Container>\n  )\n}\n\nexport default DetailPage\n","import { useSelector as useReduxSelector } from 'react-redux'\nimport { defaultState } from './reducer'\nimport type { DetailPageRootState, DetailPageState } from './types'\n\nexport const useSelector = (): DetailPageState =>\n  useReduxSelector<DetailPageRootState, DetailPageState>(\n    ({ detailPage = defaultState }) => detailPage\n  )\n","import axios from 'axios'\n\nconst internal = axios.create({\n  baseURL: 'https://apis-dev.aspenku.com/api/v1/product',\n  withCredentials: false,\n  headers: {\n    Authorization: 'Basic QXNwZW5rdTpBc3Blbmt1',\n  },\n})\n\ninternal.interceptors.request.use((config) => {\n  return config\n})\n\nexport default internal\n","import type { AxiosResponse } from 'axios'\nimport axios from 'utils/axios'\nimport type { Data, StartActionPayload, Error } from './types'\n\nexport type Response = AxiosResponse<Data | Error>\n\nexport type Payload = Omit<StartActionPayload, 'new'>\n\nexport const load = (params: Payload): Promise<Response> => {\n  return axios.get(``, { params })\n}\n","export const START_ACTION = 'HomePage/START_ACTION'\nexport const SUCCESS_ACTION = 'HomePage/SUCCESS_ACTION'\nexport const ERROR_ACTION = 'HomePage/ERROR_ACTION'\nexport const RESET_ACTION = 'HomePage/RESET_ACTION'\n","import type { SagaIterator } from 'redux-saga'\nimport { load, Payload, Response } from './service'\nimport type {\n  Data,\n  ErrorAction,\n  StartAction,\n  StartActionPayload,\n  SuccessAction,\n} from './types'\nimport { put, call, takeLatest } from 'redux-saga/effects'\nimport { ERROR_ACTION, START_ACTION, SUCCESS_ACTION } from './constant'\n\nconst mapPayload = (payload: StartActionPayload): Payload => {\n  return {\n    limit: payload.limit ? payload.limit : undefined,\n    search: payload.s ? payload.s : undefined,\n  }\n}\n\nexport function* loadSaga({ payload }: StartAction): SagaIterator {\n  const { data }: Response = yield call(load, mapPayload(payload))\n  if (data) {\n    yield put<SuccessAction>({\n      payload: { data: data as Data, new: payload.new },\n      type: SUCCESS_ACTION,\n    })\n  } else {\n    yield put<ErrorAction>({\n      payload: { error: { Error: 'Something Wrong', Response: 'False' } },\n      type: ERROR_ACTION,\n    })\n  }\n}\n\nexport default function* saga(): SagaIterator {\n  yield takeLatest(START_ACTION, loadSaga)\n}\n","import {\n  ERROR_ACTION,\n  RESET_ACTION,\n  START_ACTION,\n  SUCCESS_ACTION,\n} from './constant'\nimport type { HomePageReducer, HomePageState } from './types'\n\nexport const defaultState: HomePageState = {\n  loading: false,\n  error: undefined,\n  data: [],\n  limit: 10,\n  s: '',\n}\n\nexport const reducer: HomePageReducer = (\n  state = defaultState,\n  action\n): HomePageState => {\n  switch (action.type) {\n    case START_ACTION:\n      return {\n        ...state,\n        ...action.payload,\n        loading: true,\n      }\n    case SUCCESS_ACTION:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.new\n          ? action.payload.data.data.rows\n          : [...state.data, ...action.payload.data.data.rows],\n      }\n    case ERROR_ACTION:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      }\n    case RESET_ACTION:\n      return {\n        ...state,\n        error: undefined,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { useMemo } from 'react'\nimport type { ResetAction, StartAction, StartActionPayload } from './types'\nimport { useDispatch as useReduxDispatch } from 'react-redux'\nimport { RESET_ACTION, START_ACTION } from './constant'\n\nexport interface Dispatch {\n  readonly load: (payload: StartActionPayload) => void\n  readonly reset: () => void\n}\n\nexport const useDispatch = (): Dispatch => {\n  const dispatch = useReduxDispatch()\n  return useMemo(\n    () => ({\n      load: (payload) => {\n        dispatch<StartAction>({\n          payload,\n          type: START_ACTION,\n        })\n      },\n      reset: () => {\n        dispatch<ResetAction>({\n          type: RESET_ACTION,\n        })\n      },\n    }),\n    [dispatch]\n  )\n}\n\nexport default useDispatch\n","import { Card, Layout } from 'antd'\nimport styled from 'styled-components'\n\nexport const BannerContainers = styled.a`\n  position: relative;\n\n  & > p {\n    position: absolute;\n    bottom: 0px;\n    left: 20px;\n    text-align: left;\n    font: normal normal bold 28px/34px Raleway;\n    letter-spacing: 0.45px;\n    color: white;\n    max-lines: 3;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n  }\n  .img {\n    border-radius: 15px;\n    position: relative;\n    opacity: 1;\n    -webkit-filter: brightness(70%);\n    filter: brightness(70%);\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n  @media only screen and (min-width: 992px) {\n    img {\n      width: 100%;\n      border-radius: 15px;\n    }\n  }\n`\n\nexport const StyledLayoutContents = styled(Layout.Content)`\n  min-height: 100vh;\n  padding: 10px 10px !important;\n  background: green;\n  border-top-left-radius: 90px;\n  border-top-right-radius: 90px;\n  @media only screen and (min-width: 992px) {\n    flex-direction: row;\n    padding: 90px 60px !important;\n  }\n`\nexport const StyledLayoutContentss = styled(Layout.Content)`\n  min-height: 20vh;\n  padding: 10px 10px !important;\n  background: #101820;\n\n  @media only screen and (min-width: 992px) {\n    flex-direction: row;\n    padding: 90px 60px !important;\n  }\n`\nexport const StyledCard = styled(Card)`\n  height: 90x;\n  border-radius: 15px;\n  border: 3px solid #7ccc6c;\n  overflow: hidden;\n  width: 280px;\n\n  .ant-card-meta-title {\n    font-size: 12px;\n    font-weight: bold;\n  }\n\n  .ant-card-meta-description {\n    font-size: 18px;\n    margin-bottom: 0px !important;\n    font-weight: bold;\n    color: #820000;\n  }\n\n  .ant-card-meta-detail {\n    margin-top: 0px;\n  }\n  .custom-meta {\n    margin-top: -16px !important;\n    font-size: 13px;\n  }\n`\n\nexport const Cards = styled.div`\n  padding-bottom: 48px;\n  display: inline-block;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  .ant-card {\n    border: 1px solid #7ccc6c;\n  }\n`\nexport const Wrapper = styled.div`\n  font-size: 30px;\n  font-weight: 600px;\n  color: white;\n  padding-left: 20px;\n  padding-bottom: 30px;\n`\n","import { Card, Carousel } from 'antd'\n\nimport styled from 'styled-components'\n\nexport interface CarouselProps {\n  readonly $dataLength?: number\n}\n\nexport const BannerContainers = styled.a`\n  position: relative;\n\n  & > p {\n    position: absolute;\n    bottom: 0px;\n    left: 20px;\n    text-align: left;\n    font: normal normal bold 28px/34px Raleway;\n    letter-spacing: 0.45px;\n    color: white;\n    max-lines: 3;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n  }\n  .img {\n    border-radius: 15px;\n    position: relative;\n    opacity: 1;\n    -webkit-filter: brightness(70%);\n    filter: brightness(70%);\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n  @media only screen and (min-width: 992px) {\n    img {\n      width: 100%;\n      border-radius: 15px;\n    }\n  }\n`\nexport const StyledAntdCarousel = styled(Carousel)<CarouselProps>`\n  .slick-dots li {\n    width: 6.05px;\n    height: 6.05px;\n    margin: 0 12px;\n    button {\n      width: 6.05px;\n      height: 6.05px;\n      border-radius: 6.05px;\n      background: #000000;\n      opacity: 0.3;\n    }\n    &.slick-active {\n      width: 6.05px;\n      button {\n        background: #000000;\n        opacity: 1;\n      }\n    }\n  }\n\n  .slick-dots.slick-dots-bottom {\n    bottom: -50px !important;\n  }\n\n  .slick-slide > div {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n\n  .slick-dots li button {\n    opacity: 1 !important;\n    width: 8px !important;\n    height: 8px !important;\n    border: 1px solid #000;\n    background-color: #fff;\n  }\n\n  .slick-dots.slick-active li button {\n    opacity: 1 !important;\n    width: 8px !important;\n    height: 8px !important;\n    border: 1px solid #000;\n  }\n\n  @media only screen and (min-width: 992px) {\n    margin-bottom: 0px;\n  }\n\n  .slick-prev {\n    margin-left: 20px;\n    @media only screen and (min-width: 992px) {\n      margin-left: 0;\n      transform: translateY(-50%);\n    }\n  }\n\n  .slick-next {\n    margin-right: 20px;\n    @media only screen and (min-width: 992px) {\n      margin-right: 0;\n      transform: translateY(-50%);\n    }\n  }\n`\n\nexport const StyledCard = styled(Card)`\n  height: 100%;\n  border-radius: 15px;\n  border: 1px solid #00000080;\n  overflow: hidden;\n\n  .ant-card-meta-title {\n    font-size: 18px;\n    margin-bottom: 0px !important;\n    font-weight: bold;\n  }\n\n  .ant-card-meta-description {\n    font-size: 14px;\n    font-weight: bold;\n  }\n\n  .ant-card-meta-detail {\n    margin-top: 5px;\n  }\n\n  @media only screen and (min-width: 992px) {\n    width: 346px;\n    height: 430px;\n  }\n\n  &:hover {\n    border: 1px solid #00000080;\n\n    .porto {\n      transform: scale(1.15);\n    }\n  }\n`\n","import { FC, useMemo } from 'react'\nimport { StyledAntdCarousel, BannerContainers } from './styled'\nimport type { Settings } from '@ant-design/react-slick'\n\nconst Corousel: FC = () => {\n  const setting: Settings = useMemo(\n    () => ({\n      dots: true,\n      arrows: true,\n      autoplay: true,\n      draggable: true,\n      slidesToScroll: 1,\n      infinite: true,\n    }),\n    []\n  )\n\n  return (\n    <>\n      <StyledAntdCarousel {...setting}>\n        <BannerContainers>\n          <img\n            alt={`img`}\n            src=\"https://images.tokopedia.net/img/cache/1208/NsjrJu/2021/7/30/74d32a7f-6a2d-49a3-b325-114de4b055c5.jpg.webp?ect=3g\"\n          />\n        </BannerContainers>\n        <BannerContainers>\n          <img\n            alt={`img`}\n            src=\"https://images.tokopedia.net/img/cache/1208/NsjrJu/2021/10/6/746f0c35-8684-4e2c-a87e-6e0daf978854.jpg.webp?ect=3g\"\n          />\n        </BannerContainers>\n        <BannerContainers>\n          <img\n            alt={`img`}\n            src=\"https://images.tokopedia.net/img/cache/1208/NsjrJu/2021/10/8/1e4a30db-327a-45e2-b5e4-9fd5a3f90088.jpg.webp?ect=3g\"\n          />\n        </BannerContainers>\n      </StyledAntdCarousel>\n    </>\n  )\n}\n\nexport default Corousel\n","/* eslint-disable no-console */\nimport { FC, useEffect, useMemo, useState } from 'react'\nimport Container, { Crumb } from 'components/Container'\nimport { Card, Col, notification, Row, Spin } from 'antd'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { useInjectSaga } from 'utils/injectSaga'\nimport saga from './saga'\nimport reducer from './reducer'\nimport { useInjectReducer } from 'utils/injectReducer'\nimport useDispatch from './useDispatch'\nimport { useSelector } from './useSelector'\nimport {\n  Cards,\n  StyledCard,\n  StyledLayoutContents,\n  BannerContainers,\n  Wrapper,\n} from './styled'\nimport Corousel from './Corousel'\nimport { parse, ParsedQuery } from 'query-string'\n\nconst HomePage: FC = () => {\n  useInjectReducer({ key: 'homePage', reducer })\n  useInjectSaga({ key: 'homePage', saga })\n  const { load, reset } = useDispatch()\n  const { data, error, loading, s } = useSelector()\n  const { search } = useLocation()\n  const history = useHistory()\n  const [defaultSearch, setDefaultSearch] = useState<string>('')\n  const [value, setValue] = useState<string>('')\n\n  const crumbs: ReadonlyArray<Crumb> = useMemo(() => {\n    return [{ to: '/', label: 'Home' }, { label: 'List' }]\n  }, [])\n  const { Meta } = Card\n\n  useEffect(\n    () => (data.length === 0 ? load({ limit: 20, s: undefined }) : undefined),\n    [data.length, defaultSearch, load]\n  )\n\n  useEffect(() => {\n    if (error) {\n      notification.error({ message: error.Error, onClose: reset })\n    }\n  }, [error, reset])\n\n  useEffect(() => {\n    if (defaultSearch !== s) {\n      load({ limit: 20, s: defaultSearch, new: true })\n    }\n  }, [load, defaultSearch, s])\n\n  useEffect(() => {\n    const qs: ParsedQuery = parse(search)\n    if (qs.search) {\n      setDefaultSearch(qs.search as string)\n      setValue(qs.search as string)\n    }\n  }, [search])\n\n  return (\n    <>\n      <Container\n        crumbs={crumbs}\n        valueSearch={value}\n        onSearch={(v) => history.push(`/?search=${v}`)}\n        onChange={(e) => setValue(e.target.value)}\n      >\n        <Spin spinning={loading}>\n          <Row justify=\"center\">\n            <Col sm={24}>\n              <Corousel />\n            </Col>\n            <div style={{ marginTop: 80 }}>\n              <Row gutter={[24, 24]}>\n                <Col sm={8}>\n                  <BannerContainers>\n                    <img\n                      alt={`img`}\n                      src=\"https://images.tokopedia.net/img/cache/400/wCVIqt/2021/10/7/1788f6a0-cbde-42e2-9789-f6f082bed3e4.jpg.webp?ect=4g\"\n                    />\n                  </BannerContainers>\n                </Col>\n                <Col sm={8}>\n                  <BannerContainers>\n                    <img\n                      alt={`img`}\n                      src=\"https://images.tokopedia.net/img/cache/400/wCVIqt/2021/10/7/93dc6ceb-907a-4714-8ae6-5063f21aa9d2.jpg.webp?ect=4g\"\n                    />\n                  </BannerContainers>\n                </Col>\n                <Col sm={8}>\n                  <BannerContainers>\n                    <img\n                      alt={`img`}\n                      src=\"https://images.tokopedia.net/img/cache/400/wCVIqt/2021/10/3/295e376d-d8a0-47d9-8486-3c5fddc664f3.jpg.webp?ect=4g\"\n                    />\n                  </BannerContainers>\n                </Col>\n              </Row>\n            </div>\n          </Row>\n        </Spin>\n      </Container>\n      <StyledLayoutContents>\n        <Row gutter={[24, 24]} justify=\"center\">\n          <Col sm={24}>\n            <Wrapper>PRODUK TERBARU</Wrapper>\n          </Col>\n          {data.map(({ name, permalink, sell_price }, index) => (\n            <Col sm={24} md={8} lg={6} key={index}>\n              <Link to={`/${permalink}`}>\n                <Cards>\n                  <StyledCard\n                    hoverable={true}\n                    bordered={true}\n                    cover={\n                      <img\n                        alt={`img`}\n                        src=\"https://images.tokopedia.net/img/cache/500-square/VqbcmM/2021/8/9/b497adfe-bfa9-459a-905f-34acc4e99968.jpg.webp?ect=4g\"\n                      />\n                    }\n                  >\n                    <Meta\n                      className=\"custom-meta\"\n                      title={name}\n                      description={`Rp ${sell_price}`}\n                    />\n                  </StyledCard>\n                </Cards>\n              </Link>\n            </Col>\n          ))}\n        </Row>\n      </StyledLayoutContents>\n    </>\n  )\n}\n\nexport default HomePage\n","import { useSelector as useReduxSelector } from 'react-redux'\nimport { defaultState } from './reducer'\nimport type { HomePageRootState, HomePageState } from './types'\n\nexport const useSelector = (): HomePageState =>\n  useReduxSelector<HomePageRootState, HomePageState>(\n    ({ homePage = defaultState }) => homePage\n  )\n","import React, { FC } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport DetailPage from './containers/DetailPage'\nimport HomePage from './containers/HomePage'\n\nconst Routes: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/:id\" exact component={DetailPage} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Routes\n","import history from '@history'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { FC, Suspense } from 'react'\nimport { Provider } from 'react-redux'\nimport createStore from './store'\nimport Routes from './Routes'\n\nconst App: FC = () => {\n  const store = createStore()\n\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Suspense fallback={<p>loading</p>}>\n          <Routes />\n        </Suspense>\n      </ConnectedRouter>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","import { combineReducers, Reducer } from 'redux'\nimport { connectRouter, RouterState } from 'connected-react-router'\nimport history from '@history'\n\nexport interface InjectedReducers {\n  [k: string]: Reducer\n}\n\nexport interface RootState {\n  readonly router: RouterState\n  readonly [k: string]: ReturnType<Reducer>\n}\n\nexport type RootReducer = Reducer<RootState>\n\nconst createReducer = (injectedReducers: InjectedReducers): RootReducer =>\n  combineReducers({\n    router: connectRouter(history),\n    ...injectedReducers,\n  })\n\nexport default createReducer\n"],"sourceRoot":""}